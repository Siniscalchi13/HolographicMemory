# Makefile.help - Help and documentation targets

.PHONY: help-main help-dev help-prod help-lint help-syntax

help-main:
	@echo "üåå HolographicMemory - Advanced Holographic Memory System"
	@echo ""
	@echo "üìã MAIN TARGETS:"
	@echo "  setup     - Set up development environment"
	@echo "  test      - Run all tests"
	@echo "  build     - Build all components"
	@echo "  native    - Build native extensions"
	@echo "  api       - Start API server"
	@echo "  soa       - Start SOA system"
	@echo "  clean     - Clean build artifacts"
	@echo ""
	@echo "üîß DEVELOPMENT TARGETS:"
	@echo "  dev           - Set up development environment"
	@echo "  dev-verify    - Verify development environment"
	@echo "  launch-dev    - Launch development system"
	@echo "  dev-all       - Complete development setup sequence"
	@echo "  dev-setup     - Set up development environment"
	@echo "  dev-test      - Run development tests"
	@echo "  dev-build     - Build development components"
	@echo "  dev-native    - Build native extensions"
	@echo "  dev-api       - Start development API server"
	@echo "  dev-soa       - Start development SOA system"
	@echo "  dev-benchmark - Run development benchmarks"
	@echo "  dev-demo      - Run development demos"
	@echo ""
	@echo "üöÄ PRODUCTION TARGETS:"
	@echo "  prod-deploy   - Deploy to production"
	@echo "  prod-release  - Create production release"
	@echo "  prod-test     - Run production tests"
	@echo "  prod-benchmark - Run production benchmarks"
	@echo ""
	@echo "üîç QUALITY TARGETS:"
	@echo "  lint          - Run all linting"
	@echo "  syntax        - Check syntax"
	@echo "  validate      - Validate system"
	@echo ""
	@echo "üìö HELP TARGETS:"
	@echo "  help          - Show this help"
	@echo "  help-dev      - Show development help"
	@echo "  help-prod     - Show production help"
	@echo "  help-lint     - Show linting help"
	@echo "  help-syntax   - Show syntax help"
	@echo ""
	@echo "üí° EXAMPLES:"
	@echo "  make dev-all  # Complete development setup sequence"
	@echo "  make dev      # Set up development environment"
	@echo "  make dev-verify # Verify development environment"
	@echo "  make launch-dev # Launch development system"
	@echo "  make prod-deploy # Deploy to production"
	@echo "  make lint     # Run all linting"

help-dev:
	@echo "üîß DEVELOPMENT HELP:"
	@echo ""
	@echo "Development targets for local development and testing:"
	@echo ""
	@echo "  dev           - Set up development environment"
	@echo "  dev-verify    - Verify development environment"
	@echo "  launch-dev    - Launch development system"
	@echo "  dev-all       - Complete development setup sequence"
	@echo "  dev-setup     - Set up virtual environment and install dependencies"
	@echo "  dev-test      - Run all development tests"
	@echo "  dev-build     - Build all development components"
	@echo "  dev-native    - Build native C++ extensions with GPU support"
	@echo "  dev-api       - Start development API server on port 8080"
	@echo "  dev-soa       - Start full SOA system for development"
	@echo "  dev-benchmark - Run development performance benchmarks"
	@echo "  dev-demo      - Run development demonstration scripts"
	@echo "  dev-clean     - Clean development build artifacts"
	@echo ""
	@echo "Development workflow (original sequence):"
	@echo "  1. make clean        # Clean build artifacts"
	@echo "  2. make dev          # Set up development environment"
	@echo "  3. source venv/bin/activate  # Activate virtual environment"
	@echo "  4. make dev-verify   # Verify development environment"
	@echo "  5. make launch-dev   # Launch development system"
	@echo ""
	@echo "Or use the all-in-one command:"
	@echo "  make dev-all         # Complete development setup sequence"

help-prod:
	@echo "üöÄ PRODUCTION HELP:"
	@echo ""
	@echo "Production targets for deployment and release:"
	@echo ""
	@echo "  prod-deploy   - Deploy to production environment"
	@echo "  prod-release  - Create production release package"
	@echo "  prod-test     - Run production validation tests"
	@echo "  prod-benchmark - Run production performance benchmarks"
	@echo "  prod-clean    - Clean production build artifacts"
	@echo ""
	@echo "Production workflow:"
	@echo "  1. make prod-test     # Validate production readiness"
	@echo "  2. make prod-benchmark # Run production benchmarks"
	@echo "  3. make prod-release  # Create release package"
	@echo "  4. make prod-deploy   # Deploy to production"

help-lint:
	@echo "üîç LINTING HELP:"
	@echo ""
	@echo "Code quality and linting targets:"
	@echo ""
	@echo "  lint-all      - Run all linting checks"
	@echo "  lint-python   - Lint Python code"
	@echo "  lint-cpp      - Lint C++ code"
	@echo "  lint-markdown - Lint Markdown documentation"
	@echo "  lint-yaml     - Lint YAML configuration files"
	@echo "  lint-json     - Lint JSON configuration files"
	@echo ""
	@echo "Linting tools used:"
	@echo "  - Python: flake8, black, isort"
	@echo "  - C++: clang-format, cppcheck"
	@echo "  - Markdown: markdownlint"
	@echo "  - YAML: yamllint"
	@echo "  - JSON: jsonlint"

help-syntax:
	@echo "üìù SYNTAX HELP:"
	@echo ""
	@echo "Syntax checking and validation targets:"
	@echo ""
	@echo "  syntax-check  - Check syntax of all files"
	@echo "  syntax-python - Check Python syntax"
	@echo "  syntax-cpp    - Check C++ syntax"
	@echo "  syntax-yaml   - Check YAML syntax"
	@echo "  syntax-json   - Check JSON syntax"
	@echo ""
	@echo "Syntax checking tools:"
	@echo "  - Python: python -m py_compile"
	@echo "  - C++: g++ -fsyntax-only"
	@echo "  - YAML: python -c 'import yaml; yaml.safe_load(open())'"
	@echo "  - JSON: python -m json.tool"
