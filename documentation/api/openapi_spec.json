{
  "openapi": "3.0.0",
  "info": {
    "title": "HolographicMemory SOA API Documentation",
    "version": "1.0.0",
    "description": "Comprehensive API documentation for the HolographicMemory Service-Oriented Architecture"
  },
  "servers": [
    {
      "url": "http://localhost:8081"
    }
  ],
  "paths": {
    "/api/v1/holographic-memory/store": {
      "post": {
        "summary": "Store data in holographic memory",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Data to store"
          },
          {
            "name": "metadata",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object"
            },
            "description": "Optional metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Data stored successfully",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/holographic-memory/retrieve": {
      "get": {
        "summary": "Retrieve data from holographic memory",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Memory ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/holographic-memory/search": {
      "post": {
        "summary": "Search holographic memory",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "similarity_threshold",
            "in": "body",
            "required": false,
            "schema": {
              "type": "float"
            },
            "description": "Similarity threshold"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          },
          "400": {
            "description": "Invalid query"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "summary": "Upload and process files",
        "parameters": [
          {
            "name": "file",
            "in": "body",
            "required": true,
            "schema": {
              "type": "file"
            },
            "description": "File to upload"
          },
          {
            "name": "process_type",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Processing type"
          }
        ],
        "responses": {
          "200": {
            "description": "File processed successfully"
          },
          "400": {
            "description": "Invalid file"
          },
          "500": {
            "description": "Processing error"
          }
        }
      }
    },
    "/api/v1/files/process": {
      "post": {
        "summary": "Process uploaded file",
        "parameters": [
          {
            "name": "file_id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File ID"
          },
          {
            "name": "options",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object"
            },
            "description": "Processing options"
          }
        ],
        "responses": {
          "200": {
            "description": "Processing completed"
          },
          "404": {
            "description": "File not found"
          },
          "500": {
            "description": "Processing error"
          }
        }
      }
    },
    "/api/v1/compression/compress": {
      "post": {
        "summary": "Compress data using holographic compression",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Data to compress"
          },
          {
            "name": "algorithm",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Compression algorithm"
          },
          {
            "name": "threshold",
            "in": "body",
            "required": false,
            "schema": {
              "type": "float"
            },
            "description": "Compression threshold"
          }
        ],
        "responses": {
          "200": {
            "description": "Data compressed successfully"
          },
          "400": {
            "description": "Invalid data"
          },
          "500": {
            "description": "Compression error"
          }
        }
      }
    },
    "/api/v1/compression/decompress": {
      "post": {
        "summary": "Decompress holographic data",
        "parameters": [
          {
            "name": "compressed_data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Compressed data"
          },
          {
            "name": "algorithm",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Decompression algorithm"
          }
        ],
        "responses": {
          "200": {
            "description": "Data decompressed successfully"
          },
          "400": {
            "description": "Invalid compressed data"
          },
          "500": {
            "description": "Decompression error"
          }
        }
      }
    },
    "/api/v1/monitoring/health": {
      "get": {
        "summary": "Get system health status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Health status"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/api/v1/monitoring/metrics": {
      "get": {
        "summary": "Get system metrics",
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Time range for metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "System metrics"
          },
          "500": {
            "description": "Metrics unavailable"
          }
        }
      }
    },
    "/api/v1/monitoring/alerts": {
      "get": {
        "summary": "Get active alerts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Active alerts"
          },
          "500": {
            "description": "Alerts unavailable"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}