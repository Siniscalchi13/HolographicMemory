from __future__ import annotations

import shutil
import subprocess
import sys
from pathlib import Path

import pytest


@pytest.mark.security
def test_bandit_static_analysis():
    if shutil.which("bandit") is None:
        pytest.skip("bandit not installed")
    # Scan a subset of code to keep runtime reasonable
    cmd = ["bandit", "-q", "-r", "services", "-x", "**/tests/**", "-ll"]
    proc = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    # Do not fail the suite on findings yet; integrate thresholds in CI
    assert proc.returncode in (0, 1)


@pytest.mark.security
def test_pip_audit_dependencies():
    if shutil.which("pip-audit") is None:
        pytest.skip("pip-audit not installed")
    proc = subprocess.run([sys.executable, "-m", "pip_audit", "-q"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    # 0 means no known vulns; 1 means vulns found. We allow both but capture output.
    assert proc.returncode in (0, 1)

